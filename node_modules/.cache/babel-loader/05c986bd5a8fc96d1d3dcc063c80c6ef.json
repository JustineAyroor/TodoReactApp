{"ast":null,"code":"var _jsxFileName = \"/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  async loadTodos() {\n    let allTodos = await apiCalls.getTodos();\n    this.setState({\n      allTodos\n    });\n  }\n\n  async addTodo(val) {\n    // console.log(\"Adding Todo from TodoList Component:\", val)\n    let newTodo = await apiCalls.createTodo();\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  deleteTodo(id) {\n    const deleteUrl = APIURL + id;\n    fetch(deleteUrl, {\n      method: 'delete'\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(() => {\n      const todos = this.state.todos.filter(todo => todo._id !== id);\n      this.setState({\n        todos: todos\n      });\n    });\n  }\n\n  toggleTodo(todo) {\n    const updateUrl = APIURL + todo._id;\n    fetch(updateUrl, {\n      method: 'put',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(updatedTodo => {\n      const todos = this.state.todos.map(todo => todo._id === updatedTodo._id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n      this.setState({\n        todos: todos\n      });\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => React.createElement(TodoItem, Object.assign({\n      key: todo._id\n    }, todo, {\n      onDelete: this.deleteTodo.bind(this, todo._id),\n      onToggle: this.toggleTodo.bind(this, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"TodosList React App\"), React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js"],"names":["React","Component","TodoItem","TodoForm","apiCalls","TodoList","constructor","props","state","todos","addTodo","bind","componentDidMount","loadTodos","allTodos","getTodos","setState","val","newTodo","createTodo","deleteTodo","id","deleteUrl","APIURL","fetch","method","then","resp","ok","status","json","data","err","errorMessage","message","filter","todo","_id","toggleTodo","updateUrl","headers","Headers","body","JSON","stringify","completed","updatedTodo","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api'; \n\nclass TodoList extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: []\n        }\n        this.addTodo = this.addTodo.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadTodos();\n    }\n\n    async loadTodos(){\n        let allTodos = await apiCalls.getTodos();\n        this.setState({allTodos})\n    }\n\n    async addTodo(val){\n        // console.log(\"Adding Todo from TodoList Component:\", val)\n        let newTodo = await apiCalls.createTodo();\n        this.setState({todos: [...this.state.todos, newTodo]});\n    }\n\n    deleteTodo(id){\n        const deleteUrl = APIURL + id;\n        fetch(deleteUrl, {\n            method: 'delete',\n        })\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then(() => {\n            const todos = this.state.todos.filter(todo => todo._id !== id)\n            this.setState({todos: todos})\n        })\n    }\n\n    toggleTodo(todo){\n        const updateUrl = APIURL + todo._id;\n        fetch(updateUrl, {\n            method: 'put',\n            headers: new Headers({'Content-Type': 'application/json',\n        }),\n        body: JSON.stringify({completed: !todo.completed})\n        })\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then((updatedTodo) => {\n            const todos = this.state.todos.map(todo => \n                (todo._id === updatedTodo._id)? {...todo,completed: !todo.completed}:todo\n            )\n            this.setState({todos: todos})\n        })\n    }\n\n    render(){\n        const todos = this.state.todos.map((todo) => (\n            <TodoItem \n                key={todo._id} \n                {...todo} \n                onDelete={this.deleteTodo.bind(this,todo._id)}\n                onToggle={this.toggleTodo.bind(this,todo)}\n            />\n        ));\n\n        return(\n        <div>\n            <h1>TodosList React App</h1>\n            <TodoForm addTodo={this.addTodo}/>\n            <ul>\n                {todos}\n            </ul>\n        </div>\n        \n        );\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}