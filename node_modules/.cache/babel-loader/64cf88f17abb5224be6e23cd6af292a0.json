{"ast":null,"code":"var _jsxFileName = \"/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nconst APIURL = '/api/todos';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n  }\n\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  loadTodos() {\n    fetch(APIURL).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(todos => this.setState({\n      todos\n    }));\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => {\n      React.createElement(TodoItem, Object.assign({\n        key: todo._id\n      }, todo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"TodosList React App\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js"],"names":["React","Component","TodoItem","APIURL","TodoList","constructor","props","state","todos","componentDidMount","loadTodos","fetch","then","resp","ok","status","json","data","err","errorMessage","message","setState","render","map","todo","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,MAAM,GAAG,YAAf;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAgC;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,SAAL;AACH;;AAEDA,EAAAA,SAAS,GAAE;AACPC,IAAAA,KAAK,CAACR,MAAD,CAAL,CACCS,IADD,CACMC,IAAI,IAAI;AACV,UAAG,CAACA,IAAI,CAACC,EAAT,EAAY;AACR,YAAGD,IAAI,CAACE,MAAL,IAAe,GAAf,IAAsBF,IAAI,CAACE,MAAL,IAAe,GAAxC,EAA6C;AACzC,iBAAOF,IAAI,CAACG,IAAL,GAAYJ,IAAZ,CAAiBK,IAAI,IAAI;AAC5B,gBAAIC,GAAG,GAAG;AAACC,cAAAA,YAAY,EAAGF,IAAI,CAACG;AAArB,aAAV;AACA,kBAAMF,GAAN;AACH,WAHM,CAAP;AAIH,SALD,MAKK;AACD,cAAIA,GAAG,GAAG;AAACC,YAAAA,YAAY,EAAG;AAAhB,WAAV;AACA,gBAAMD,GAAN;AACH;AACJ;;AACD,aAAOL,IAAI,CAACG,IAAL,EAAP;AACH,KAdD,EAeCJ,IAfD,CAeMJ,KAAK,IAAI,KAAKa,QAAL,CAAc;AAACb,MAAAA;AAAD,KAAd,CAff;AAgBH;;AAEDc,EAAAA,MAAM,GAAE;AACJ,UAAMd,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAsBC,IAAD,IAAU;AACzC,0BAAC,QAAD;AACI,QAAA,GAAG,EAAEA,IAAI,CAACC;AADd,SAEQD,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIH,KALa,CAAd;AAOA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,KADL,CAFJ,CADA;AASH;;AAhD2B;;AAmDhC,eAAeJ,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nconst APIURL = '/api/todos';\n\nclass TodoList extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: []\n        }\n    }\n\n    componentDidMount(){\n        this.loadTodos();\n    }\n\n    loadTodos(){\n        fetch(APIURL)\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then(todos => this.setState({todos}));\n    }\n\n    render(){\n        const todos = this.state.todos.map((todo) => {\n            <TodoItem \n                key={todo._id} \n                {...todo}\n            />\n        });\n\n        return(\n        <div>\n            <h1>TodosList React App</h1>\n            <ul>\n                {todos}\n            </ul>\n        </div>\n        \n        );\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}