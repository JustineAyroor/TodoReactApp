{"ast":null,"code":"var _jsxFileName = \"/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nconst APIURL = '/api/todos/';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadTodos();\n  }\n\n  loadTodos() {\n    fetch(APIURL).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(todos => this.setState({\n      todos\n    }));\n  }\n\n  addTodo(val) {\n    // console.log(\"Adding Todo from TodoList Component:\", val)\n    fetch(APIURL, {\n      method: 'post',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        name: val\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(newTodo => {\n      this.setState({\n        todos: [...this.state.todos, newTodo]\n      });\n    });\n  }\n\n  deleteTodo(id) {\n    const deleteUrl = APIURL + id;\n    fetch(deleteUrl, {\n      method: 'delete'\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(() => {\n      const todos = this.state.todos.filter(todo => todo._id !== id);\n      this.setState({\n        todos: todos\n      });\n    });\n  }\n\n  toggleTodo(todo) {\n    const updateUrl = APIURL + todo._id;\n    fetch(updateUrl, {\n      method: 'put',\n      headers: new Headers({\n        'Content-Type': 'application/json'\n      }),\n      body: JSON.stringify({\n        completed: !todo.completed\n      })\n    }).then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status <= 500) {\n          return resp.json().then(data => {\n            let err = {\n              errorMessage: data.message\n            };\n            throw err;\n          });\n        } else {\n          let err = {\n            errorMessage: 'Please Try Again Later'\n          };\n          throw err;\n        }\n      }\n\n      return resp.json();\n    }).then(updatedTodo => {\n      const todos = this.state.todos.map(todo => todo._id === updatedTodo._id ? { ...todo,\n        completed: !todo.completed\n      } : todo);\n      this.setState({\n        todos: todos\n      });\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(todo => React.createElement(TodoItem, Object.assign({\n      key: todo._id\n    }, todo, {\n      onDelete: this.deleteTodo.bind(this, todo._id),\n      onToggle: this.toggleTodo.bind(this, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"TodosList React App\"), React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/justineayroor/Desktop/TodoReactApp/todos-frontend/src/TodoList.js"],"names":["React","Component","TodoItem","TodoForm","APIURL","TodoList","constructor","props","state","todos","addTodo","bind","componentDidMount","loadTodos","fetch","then","resp","ok","status","json","data","err","errorMessage","message","setState","val","method","headers","Headers","body","JSON","stringify","name","newTodo","deleteTodo","id","deleteUrl","filter","todo","_id","toggleTodo","updateUrl","completed","updatedTodo","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\n\nconst APIURL = '/api/todos/';\n\nclass TodoList extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            todos: []\n        }\n        this.addTodo = this.addTodo.bind(this);\n    }\n\n    componentDidMount(){\n        this.loadTodos();\n    }\n\n    loadTodos(){\n        fetch(APIURL)\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then(todos => this.setState({todos}));\n    }\n\n    addTodo(val){\n        // console.log(\"Adding Todo from TodoList Component:\", val)\n        fetch(APIURL, {\n            method: 'post',\n            headers: new Headers({'Content-Type': 'application/json',\n        }),\n        body: JSON.stringify({name: val})\n    })\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then(newTodo => {\n            this.setState({todos: [...this.state.todos, newTodo]});\n        });\n    }\n\n    deleteTodo(id){\n        const deleteUrl = APIURL + id;\n        fetch(deleteUrl, {\n            method: 'delete',\n        })\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then(() => {\n            const todos = this.state.todos.filter(todo => todo._id !== id)\n            this.setState({todos: todos})\n        })\n    }\n\n    toggleTodo(todo){\n        const updateUrl = APIURL + todo._id;\n        fetch(updateUrl, {\n            method: 'put',\n            headers: new Headers({'Content-Type': 'application/json',\n        }),\n        body: JSON.stringify({completed: !todo.completed})\n        })\n        .then(resp => {\n            if(!resp.ok){\n                if(resp.status >= 400 && resp.status <= 500 ){\n                    return resp.json().then(data => {\n                        let err = {errorMessage : data.message};\n                        throw err;\n                    })\n                }else{\n                    let err = {errorMessage : 'Please Try Again Later'};\n                    throw err;\n                }\n            }\n            return resp.json();\n        })\n        .then((updatedTodo) => {\n            const todos = this.state.todos.map(todo => \n                (todo._id === updatedTodo._id)? {...todo,completed: !todo.completed}:todo\n            )\n            this.setState({todos: todos})\n        })\n    }\n\n    render(){\n        const todos = this.state.todos.map((todo) => (\n            <TodoItem \n                key={todo._id} \n                {...todo} \n                onDelete={this.deleteTodo.bind(this,todo._id)}\n                onToggle={this.toggleTodo.bind(this,todo)}\n            />\n        ));\n\n        return(\n        <div>\n            <h1>TodosList React App</h1>\n            <TodoForm addTodo={this.addTodo}/>\n            <ul>\n                {todos}\n            </ul>\n        </div>\n        \n        );\n    }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}